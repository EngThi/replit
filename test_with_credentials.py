#!/usr/bin/env python3
"""
Teste do Sistema Completo com Credenciais
"""

import sys
sys.path.append('/workspaces/replit')

from ai_studio_interaction_improved import AIStudioInteraction
from credentials_manager import CredentialsManager

def test_with_credentials():
    """Testa sistema com verifica√ß√£o de credenciais"""
    print("üîê TESTE DO SISTEMA COM CREDENCIAIS")
    print("=" * 45)
    
    # Verificar credenciais primeiro
    creds = CredentialsManager()
    
    if creds.has_valid_credentials():
        print("‚úÖ Credenciais encontradas - testando login autom√°tico")
        mode = "autom√°tico"
    else:
        print("‚ö†Ô∏è Credenciais n√£o encontradas - testando login manual")
        mode = "manual"
    
    print(f"\nüéØ Modo: {mode}")
    print("-" * 30)
    
    # Teste de acesso
    interaction = AIStudioInteraction(headless=True)
    
    try:
        print("\n1Ô∏è‚É£ Testando acesso ao chat...")
        
        # Inicializar
        interaction.initialize_browser()
        
        # Tentar acessar chat
        if interaction.access_chat_directly():
            print("‚úÖ Chat acess√≠vel!")
            
            # Verificar campo de input
            input_field = interaction.find_input_field()
            if input_field:
                print(f"‚úÖ Campo de entrada encontrado: {input_field}")
                
                # Teste de digita√ß√£o
                print("\n2Ô∏è‚É£ Testando envio de mensagem...")
                message = "Ol√°! Esta √© uma mensagem de teste."
                
                if interaction.send_message_robust(message):
                    print("‚úÖ Mensagem enviada com sucesso!")
                    
                    # Aguardar resposta
                    print("\n3Ô∏è‚É£ Aguardando resposta...")
                    response = interaction.wait_for_ai_response(timeout=30)
                    
                    if response:
                        print(f"‚úÖ Resposta recebida: {response[:100]}...")
                        
                        # Salvar conversa
                        conversation_file = interaction.save_conversation()
                        print(f"‚úÖ Conversa salva: {conversation_file}")
                        
                        print("\nüéâ TESTE COMPLETO: SUCESSO TOTAL!")
                        return True
                    else:
                        print("‚ö†Ô∏è Resposta n√£o capturada")
                        return False
                else:
                    print("‚ùå Falha ao enviar mensagem")
                    return False
            else:
                print("‚ùå Campo de entrada n√£o encontrado")
                return False
        else:
            print("‚ùå N√£o foi poss√≠vel acessar chat")
            print(f"‚ÑπÔ∏è Isso √© esperado em modo {mode} sem intera√ß√£o manual")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro no teste: {e}")
        return False
    finally:
        interaction.cleanup()

def show_setup_instructions():
    """Mostra instru√ß√µes de configura√ß√£o"""
    print("\nüìã CONFIGURA√á√ÉO R√ÅPIDA:")
    print("=" * 25)
    
    print("\nüîß Para testar com credenciais:")
    print("1. Crie o arquivo: /workspaces/replit/config.json")
    print("2. Conte√∫do:")
    print("""{
  "google": {
    "email": "seu_email@gmail.com",
    "password": "sua_senha"
  }
}""")
    
    print("\n‚ö†Ô∏è IMPORTANTE:")
    print("‚Ä¢ Use senha de aplicativo se tiver 2FA")
    print("‚Ä¢ Google > Conta > Seguran√ßa > Senhas de app")
    print("‚Ä¢ Nunca commite este arquivo no git!")

def main():
    """Executa teste completo"""
    print("üöÄ TESTE COMPLETO DO SISTEMA AI STUDIO")
    print("=" * 50)
    
    # Executar teste
    success = test_with_credentials()
    
    if success:
        print("\nüéâ SISTEMA FUNCIONANDO PERFEITAMENTE!")
        print("‚úÖ Pronto para uso em produ√ß√£o")
    else:
        print("\n‚ö†Ô∏è Sistema parcialmente funcional")
        print("‚ÑπÔ∏è Configure credenciais para funcionamento completo")
        show_setup_instructions()

if __name__ == "__main__":
    main()
