"""
Teste da automa√ß√£o em modo n√£o-headless para contornar bloqueios de seguran√ßa
"""

import os
from automation import GoogleAIStudioAutomation

def test_visible_browser():
    """
    Testa a automa√ß√£o com navegador vis√≠vel para evitar detec√ß√£o
    """
    print("üîç Testando automa√ß√£o com navegador vis√≠vel...")
    
    # Email e senha de teste (substitua pelos seus)
    email = os.getenv("SEU_EMAIL", "")
    password = os.getenv("SUA_SENHA", "")
    
    if not email or not password:
        print("‚ùå Configure as vari√°veis de ambiente SEU_EMAIL e SUA_SENHA")
        return
    
    automation = GoogleAIStudioAutomation(headless=False, timeout_2fa=60)  # Modo vis√≠vel
    
    try:
        print("1. Inicializando navegador vis√≠vel...")
        automation.initialize_browser()
        
        print("2. Navegando para Google AI Studio...")
        automation.navigate_to_ai_studio()
        
        print("3. Clicando em Get started...")
        automation.start_login()
        
        print("4. Inserindo email...")
        automation.enter_email(email)
        
        print("5. Inserindo senha...")
        automation.enter_password(password)
        
        print("6. Aguardando 2FA...")
        automation.wait_for_2fa()
        
        print("‚úÖ Login conclu√≠do!")
        automation.take_screenshot("login_sucesso.png")
        
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        try:
            automation.take_screenshot("erro_login.png")
        except:
            pass
            
    finally:
        input("Pressione Enter para fechar o navegador...")
        automation.close_browser()

if __name__ == "__main__":
    test_visible_browser()
